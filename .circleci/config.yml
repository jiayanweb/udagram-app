# This config uses the `.circleci/extended/orb-test.yml` as its base, and then publishes the app to S3.
# The workflow contained here demonstrates a practical application of `post-steps`
# and using workspace persistence
version: 2.1
orbs:
  node: circleci/node@4.1.0
  aws-cli: circleci/aws-cli@1.3.1
jobs:
  build:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install
      - checkout
      - aws-cli/setup
      - run:
          name: Install dependencies
          command: |
            sudo apt update
            sudo apt install python3-pip python-dev
            sudo pip install awsebcli
      - run:
          name: Front-End Install
          command: |
            npm run frontend:install
      - run:
          name: Back-End Install
          command: |
            npm run backend:install
      - run:
          name: Front-End test cases
          command: |
            echo "skip front-end test."  # npm run backend:test
      - run:
          name: Back-End test cases
          command: |
            echo "skip backend test."  # npm run backend:test
      - run:
          name: Front-End Build
          command: |
            npm run frontend:build
      - run:
          name: Back-End Build
          command: |
            npm run backend:build
      - run:
          name: Deploy Backend
          command: |
            echo "Deploying api to ebs."  # eb deploy Jyxudagramapi4-env
      - run:
          name: Deploy Front-End
          command: |
            aws s3 sync ./www s3://udagramfrontendjyx